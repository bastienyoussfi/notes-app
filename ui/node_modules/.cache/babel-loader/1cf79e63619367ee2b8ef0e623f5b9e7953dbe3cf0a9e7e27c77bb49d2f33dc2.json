{"ast":null,"code":"var _jsxFileName = \"/home/bastien-youssfi/Documents/notes-app/notes-app-ui/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([{\n    id: 1,\n    title: \"Note Title 1\",\n    content: \"Note Description\"\n  }, {\n    id: 2,\n    title: \"Note Title 2\",\n    content: \"Note Description\"\n  }, {\n    id: 3,\n    title: \"Note Title 3\",\n    content: \"Note Description\"\n  }]);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [selectedNote, setSelectedNote] = useState(null);\n  const handleClickNote = note => {\n    setSelectedNote(note);\n    setTitle(note.title);\n    setContent(note.content);\n  };\n  const handleAddNote = e => {\n    e.preventDefault();\n    console.log(title);\n    console.log(content);\n\n    // Creates a new note object\n    const newNote = {\n      id: notes.length + 1,\n      title: title,\n      content: content\n    };\n    // Adds the new note to the notes array\n    setNotes([newNote, ...notes]);\n    // Clears the input fields of the form\n    setTitle(\"\");\n    setContent(\"\");\n  };\n  const handleEditNode = e => {\n    e.preventDefault();\n    if (!selectedNote) {\n      return;\n    }\n\n    // Creates a new note object\n    const editedNote = {\n      id: selectedNote.id,\n      title: title,\n      content: content\n    };\n\n    // Updates the notes array with the edited note\n    setNotes(notes.map(note => note.id === editedNote.id ? editedNote : note));\n    setTitle(\"\");\n    setContent(\"\");\n    setSelectedNote(null);\n  };\n  const handleCancelEdit = () => {\n    setTitle(\"\");\n    setContent(\"\");\n    setSelectedNote(null);\n  };\n  const deleteNote = (event, id) => {\n    setNotes(notes.filter(note => note.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"note-form\",\n      onSubmit: event => selectedNote ? handleEditNode(event) : handleAddNote(event),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: e => setContent(e.target.value),\n        placeholder: \"Content...\",\n        rows: 10,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), selectedNote ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancelEdit,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-grid\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-item\",\n        onClick: () => handleClickNote(note),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"bQIZiX2Ft6ueTDl7FoohXxgigx4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","notes","setNotes","id","title","content","setTitle","setContent","selectedNote","setSelectedNote","handleClickNote","note","handleAddNote","e","preventDefault","console","log","newNote","length","handleEditNode","editedNote","map","handleCancelEdit","deleteNote","event","filter","className","children","onSubmit","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","rows","type","onClick","_c","$RefreshReg$"],"sources":["/home/bastien-youssfi/Documents/notes-app/notes-app-ui/src/App.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n\ntype Note = {\n  id: number;\n  title: string;\n  content: string;\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState<\n  Note[]\n  >([\n    {\n      id: 1,\n      title: \"Note Title 1\",\n      content: \"Note Description\"\n    },\n    {\n      id: 2,\n      title: \"Note Title 2\",\n      content: \"Note Description\"\n    },\n    {\n      id: 3,\n      title: \"Note Title 3\",\n      content: \"Note Description\"\n    }\n  ]);\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const [selectedNote, setSelectedNote] = useState<Note | null>(null);\n\n  const handleClickNote = (note: Note) => {\n    setSelectedNote(note);\n    setTitle(note.title);\n    setContent(note.content);\n  }\n\n  const handleAddNote = (e: React.FormEvent) => \n    {\n      e.preventDefault();\n      console.log(title)\n      console.log(content)\n\n      // Creates a new note object\n      const newNote: Note = {\n        id: notes.length + 1,\n        title: title,\n        content: content\n      };\n      // Adds the new note to the notes array\n      setNotes([newNote, ...notes]);\n      // Clears the input fields of the form\n      setTitle(\"\");\n      setContent(\"\");\n    }\n\n    const handleEditNode = (e: React.FormEvent) => \n      {\n        e.preventDefault();\n\n        if (!selectedNote) {\n          return;\n        }\n\n        // Creates a new note object\n        const editedNote: Note = {\n          id: selectedNote!.id,\n          title: title,\n          content: content\n        };\n        \n        // Updates the notes array with the edited note\n        setNotes(notes.map((note) => \n          note.id === editedNote.id ? editedNote : note\n        ));\n\n        setTitle(\"\");\n        setContent(\"\");\n        setSelectedNote(null);\n      }\n\n      const handleCancelEdit = () => \n        {\n          setTitle(\"\");\n          setContent(\"\");\n          setSelectedNote(null);\n        }\n\n        const deleteNote = (event, id: number) =>\n          {\n            setNotes(notes.filter((note) => note.id !== id));\n          }\n\n  return (\n    <div className=\"app-container\">\n      <form className=\"note-form\" onSubmit = {(event) => selectedNote ? handleEditNode(event) : handleAddNote(event)}>\n        <input\n          value = {title}\n          onChange={(e) => \n            setTitle(e.target.value)\n          }\n          placeholder=\"Title\"\n          required \n        ></input>\n        <textarea\n          value={content}\n          onChange = {(e) => \n            setContent(e.target.value)\n          }\n          placeholder=\"Content...\"\n          rows={10}\n          required\n        ></textarea>\n        {selectedNote ? (\n          <div className=\"edit-buttons\">\n            <button type=\"submit\">\n              Save\n            </button>\n            <button onClick = {handleCancelEdit}>\n              Cancel\n            </button>\n          </div>\n        ) : <button type=\"submit\">\n              Add Note\n            </button>\n        }\n      </form>\n      <div className=\"notes-grid\">\n        {notes.map((note) => (\n          <div className=\"note-item\" key={note.id} onClick = {() => handleClickNote(note)}>\n            <div className=\"note-header\">\n              <button>x</button>\n              <button>Edit</button>\n            </div>\n            <h2>{note.title}</h2>\n            <p>{note.content}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}