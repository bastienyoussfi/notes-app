{"ast":null,"code":"var _jsxFileName = \"/home/bastien-youssfi/Documents/notes-app/notes-app-ui/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [selectedNote, setSelectedNote] = useState(null);\n  useEffect(() => {\n    const fetchNotes = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/notes\");\n        const data = await response.json();\n        setNotes(data);\n      } catch (error) {\n        console.error(\"An error occurred while fetching the notes\", error);\n      }\n    };\n    fetchNotes();\n  }, []);\n  const handleClickNote = note => {\n    setSelectedNote(note);\n    setTitle(note.title);\n    setContent(note.content);\n  };\n  const handleAddNote = e => {\n    e.preventDefault();\n    console.log(title);\n    console.log(content);\n    try {\n      fetch(\"http://localhost:5000/api/notes\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title: title,\n          content: content\n        })\n      });\n    } catch (e) {}\n    const newNote = {\n      id: notes.length + 1,\n      title: title,\n      content: content\n    };\n\n    // Adds the new note to the notes array\n    setNotes([newNote, ...notes]);\n    // Clears the input fields of the form\n    setTitle(\"\");\n    setContent(\"\");\n  };\n  const handleEditNode = e => {\n    e.preventDefault();\n    if (!selectedNote) {\n      return;\n    }\n\n    // Creates a new note object\n    const editedNote = {\n      id: selectedNote.id,\n      title: title,\n      content: content\n    };\n\n    // Updates the notes array with the edited note\n    setNotes(notes.map(note => note.id === editedNote.id ? editedNote : note));\n    setTitle(\"\");\n    setContent(\"\");\n    setSelectedNote(null);\n  };\n  const handleCancelEdit = () => {\n    setTitle(\"\");\n    setContent(\"\");\n    setSelectedNote(null);\n  };\n  const deleteNote = (event, noteId) => {\n    // Prevents the event from bubbling up the DOM tree\n    event.stopPropagation();\n\n    // Filters out the note with the id that matches the noteId\n    setNotes(notes.filter(note => note.id !== noteId));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"note-form\",\n      onSubmit: event => selectedNote ? handleEditNode(event) : handleAddNote(event),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: e => setContent(e.target.value),\n        placeholder: \"Content...\",\n        rows: 10,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), selectedNote ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancelEdit,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-grid\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-item\",\n        onClick: () => handleClickNote(note),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: event => deleteNote(event, note.id),\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"VB1fkClPu3jlvzuJZF8O8L7W3ug=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","App","_s","notes","setNotes","title","setTitle","content","setContent","selectedNote","setSelectedNote","fetchNotes","response","fetch","data","json","error","console","handleClickNote","note","handleAddNote","e","preventDefault","log","method","headers","body","JSON","stringify","newNote","id","length","handleEditNode","editedNote","map","handleCancelEdit","deleteNote","event","noteId","stopPropagation","filter","className","children","onSubmit","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","rows","type","onClick","_c","$RefreshReg$"],"sources":["/home/bastien-youssfi/Documents/notes-app/notes-app-ui/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\ntype Note = {\n  id: number;\n  title: string;\n  content: string;\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState<Note[]>([]);\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const [selectedNote, setSelectedNote] = useState<Note | null>(null);\n\n  useEffect(() => {\n    const fetchNotes = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/notes\");\n        const data: Note[] = await response.json();\n        setNotes(data);\n      } catch (error) {\n        console.error(\"An error occurred while fetching the notes\", error);\n      }\n    };\n\n    fetchNotes();\n  }, []);\n\n  const handleClickNote = (note: Note) => {\n    setSelectedNote(note);\n    setTitle(note.title);\n    setContent(note.content);\n  }\n\n  const handleAddNote = (e: React.FormEvent) => \n    {\n      e.preventDefault();\n      console.log(title)\n      console.log(content)\n\n      try {\n        fetch(\"http://localhost:5000/api/notes\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n            body: JSON.stringify({\n            title: title,\n            content: content\n          })\n        });\n      } catch (e) {\n\n      }\n\n      const newNote = {\n        id: notes.length + 1,\n        title: title,\n        content: content\n      };\n\n      // Adds the new note to the notes array\n      setNotes([newNote, ...notes]);\n      // Clears the input fields of the form\n      setTitle(\"\");\n      setContent(\"\");\n    }\n\n    const handleEditNode = (e: React.FormEvent) => \n      {\n        e.preventDefault();\n\n        if (!selectedNote) {\n          return;\n        }\n\n        // Creates a new note object\n        const editedNote: Note = {\n          id: selectedNote!.id,\n          title: title,\n          content: content\n        };\n        \n        // Updates the notes array with the edited note\n        setNotes(notes.map((note) => \n          note.id === editedNote.id ? editedNote : note\n        ));\n\n        setTitle(\"\");\n        setContent(\"\");\n        setSelectedNote(null);\n      }\n\n      const handleCancelEdit = () => \n        {\n          setTitle(\"\");\n          setContent(\"\");\n          setSelectedNote(null);\n        }\n\n        const deleteNote = (\n          event: React.MouseEvent, \n          noteId: number) =>\n          {\n            // Prevents the event from bubbling up the DOM tree\n            event.stopPropagation();\n\n            // Filters out the note with the id that matches the noteId\n            setNotes(notes.filter((note) => \n              note.id !== noteId\n            ));\n          }\n\n  return (\n    <div className=\"app-container\">\n      <form className=\"note-form\" onSubmit = {(event) => selectedNote ? handleEditNode(event) : handleAddNote(event)}>\n        <input\n          value = {title}\n          onChange={(e) => \n            setTitle(e.target.value)\n          }\n          placeholder=\"Title\"\n          required \n        ></input>\n        <textarea\n          value={content}\n          onChange = {(e) => \n            setContent(e.target.value)\n          }\n          placeholder=\"Content...\"\n          rows={10}\n          required\n        ></textarea>\n        {selectedNote ? (\n          <div className=\"edit-buttons\">\n            <button type=\"submit\">\n              Save\n            </button>\n            <button onClick = {handleCancelEdit}>\n              Cancel\n            </button>\n          </div>\n        ) : <button type=\"submit\">\n              Add Note\n            </button>\n        }\n      </form>\n      <div className=\"notes-grid\">\n        {notes.map((note) => (\n          <div className=\"note-item\" key={note.id} onClick = {() => handleClickNote(note)}>\n            <div className=\"note-header\">\n              <button onClick = {(event) => \n                deleteNote(event, note.id)\n                }>x</button>\n            </div>\n            <h2>{note.title}</h2>\n            <p>{note.content}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}